// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  clerkId String @unique @map("clerkId")
  name String
  email String @unique
  imageUrl String? @map("imageUrl")

  organizations Organization[]
  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Organization {
  id String @id @default(uuid())
  name String
  organizationSlug String @unique
  imageUrl String?
  inviteCode String @unique

  userId String
  user User @relation(fields: [userId], references: [clerkId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  groups Group[]
  members Member[]

  @@index([userId])
}

enum Role {
  ADMIN
  MEMBER
}

model Member {
  id String @id @default(uuid())
  role Role @default(MEMBER)

  userId String 
  user User @relation(fields: [userId], references: [clerkId], onDelete: Cascade)

  organizationId String 
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([organizationId])
}

model Group {
  id String @id @default(cuid())
  name String
  year String
  cover String?
  icon String
  inTrash Boolean @default(false)

  createdAt DateTime @default(now())
  createdBy String 
  updatedBy String
  updatedAt DateTime @updatedAt()

  organizationId String? 
  organization Organization? @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@index([organizationId])
}